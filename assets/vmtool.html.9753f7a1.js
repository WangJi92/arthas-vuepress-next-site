import{_ as t,r as o,o as c,c as l,a as e,b as s,w as i,F as d,d as a,e as h}from"./app.1edb3735.js";const p={},u=e("h1",{id:"vmtool",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vmtool","aria-hidden":"true"},"#"),a(" vmtool")],-1),m=a("@since 3.5.1 "),b={href:"https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en&id=command-vmtool",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"vmtool",-1),f=a(" online tutorial"),v=e("p",null,[e("code",null,"vmtool"),a(" uses the "),e("code",null,"JVMTI"),a(" to support "),e("code",null,"getInstances"),a(" in jvm and "),e("code",null,"forceGc"),a(".")],-1),x={href:"https://docs.oracle.com/javase/8/docs/platform/jvmti/jvmti.html",target:"_blank",rel:"noopener noreferrer"},_=a("JVM Tool Interface"),k=h(`<h3 id="getinstances" tabindex="-1"><a class="header-anchor" href="#getinstances" aria-hidden="true">#</a> getInstances</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ vmtool --action getInstances --className java.lang.String --limit 10
@String[][
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com.taobao.arthas.core.shell.session.Session],
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/],
    @String[java/util/concurrent/ConcurrentHashMap$ValueIterator],
    @String[java/util/concurrent/locks/LockSupport],
]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>Through the <code>--limit</code> parameter, you can limit the number of return values to avoid pressure on the JVM when obtaining large data. The default value of limit is 10.</p></blockquote><h3 id="specify-classloader-name" tabindex="-1"><a class="header-anchor" href="#specify-classloader-name" aria-hidden="true">#</a> Specify classloader name</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vmtool --action getInstances --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader --className org.springframework.context.ApplicationContext
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="specify-classloader-hash" tabindex="-1"><a class="header-anchor" href="#specify-classloader-hash" aria-hidden="true">#</a> Specify classloader hash</h3><p>The classloader that loads the class can be found through the <code>sc</code> command.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ sc -d org.springframework.context.ApplicationContext
 class-info org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext
 code-source file:/private/tmp/demo-arthas-spring-boot.jar!/BOOT-INF/lib/spring-boot-1.5.13.RELEASE.jar!/
 name org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext
...
 class-loader +-org.springframework.boot.loader.LaunchedURLClassLoader@19469ea2
                     +-sun.misc.Launcher$AppClassLoader@75b84c92
                       +-sun.misc.Launcher$ExtClassLoader@4f023edb
 classLoaderHash 19469ea2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Then use the <code>-c</code>/<code>--classloader</code> parameter to specify:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vmtool --action getInstances -c 19469ea2 --className org.springframework.context.ApplicationContext
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="specify-the-number-of-expanded-layers-of-returned-results" tabindex="-1"><a class="header-anchor" href="#specify-the-number-of-expanded-layers-of-returned-results" aria-hidden="true">#</a> Specify the number of expanded layers of returned results</h3><blockquote><p>The return result of the <code>getInstances</code> action is bound to the <code>instances</code> variable, which is an array.</p></blockquote><blockquote><p>The expansion level of the result can be specified by the <code>-x</code>/<code>--expand</code> parameter, the default value is 1.</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vmtool --action getInstances -c 19469ea2 --className org.springframework.context.ApplicationContext -x 2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="execute-expression" tabindex="-1"><a class="header-anchor" href="#execute-expression" aria-hidden="true">#</a> Execute expression</h3><blockquote><p>The return result of the <code>getInstances</code> action is bound to the <code>instances</code> variable, which is an array. The specified expression can be executed through the <code>--express</code> parameter.</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vmtool --action getInstances --classLoaderClass org.springframework.boot.loader.LaunchedURLClassLoader --className org.springframework.context.ApplicationContext --express&#39;instances[0].getBeanDefinitionNames()&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="force-gc" tabindex="-1"><a class="header-anchor" href="#force-gc" aria-hidden="true">#</a> Force GC</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vmtool --action forceGc
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,19),S=a("Use the "),L=e("code",null,"vmoption",-1),C=a(" command to dynamically turn on the "),y=e("code",null,"PrintGC",-1),w=a(" option.");function I(T,A){const n=o("ExternalLinkIcon"),r=o("RouterLink");return c(),l(d,null,[u,e("blockquote",null,[e("p",null,[m,e("a",b,[g,f,s(n)])])]),v,e("ul",null,[e("li",null,[e("a",x,[_,s(n)])])]),k,e("ul",null,[e("li",null,[S,s(r,{to:"/en/doc/vmoption.html"},{default:i(()=>[L]),_:1}),C,y,w])])],64)}var E=t(p,[["render",I],["__file","vmtool.html.vue"]]);export{E as default};
